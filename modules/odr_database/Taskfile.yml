# SPDX-License-Identifier: Apache-2.0
# ODR Database Taskfile
version: '3'

vars:
  COMPOSE_FILE: ${ROOT_DIR}/modules/odr_database/docker/postgres-compose.yml
  POSTGRES_VOLUME_NAME: omi-postgres_postgres_data
  PGADMIN_VOLUME_NAME: omi-postgres_pgadmin_data

tasks:

## PostgreSQL
  setup-postgres:
    desc: Setup the postgres database
    cmds:
      - cmd: ./scripts/setup.ps1
        platforms: [windows]
      - cmd: ./scripts/setup.sh
        platforms: [linux, darwin]

  start-postgres:
    desc: Start the postgres database
    cmds:
      - >
        docker compose -f {{.COMPOSE_FILE}} up
  stop-postgres:
    desc: Stop the postgres database
    cmds:
      - docker compose -f {{.COMPOSE_FILE}} down
  rebuild-postgres:
    desc: Rebuild the postgres database
    cmds:
      - >
        docker compose -f {{.COMPOSE_FILE}} up --build
  restart-postgres:
    desc: Restart the postgres database
    deps:
      - stop-postgres
    cmds:
      - task: start-postgres
  watch-postgres-logs:
    desc: Watch the postgres logs
    cmds:
      - docker compose -f {{.COMPOSE_FILE}} logs -f

  reset-postgres:
    desc: Reset the postgres database
    cmds:
      - docker compose -f {{.COMPOSE_FILE}} down
      - docker volume rm {{.POSTGRES_VOLUME_NAME}}
      - task: start-postgres
      - task: watch-postgres-logs

  test-postgres:
    desc: Test the postgres database
    cmds:
      - pytest -s --log-cli-level=INFO modules/odr_database/tests/test_db_connection.py

  teardown:
    desc: Teardown the database and remove the volumes
    cmds:
      - docker compose -f {{.COMPOSE_FILE}} down
      - docker volume rm {{.POSTGRES_VOLUME_NAME}}
      - docker volume rm {{.PGADMIN_VOLUME_NAME}}
