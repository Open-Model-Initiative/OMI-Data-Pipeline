"""'Add cascading deletion to content source and distinct constraint'

Revision ID: d109dc6c5755
Revises: 703075477888
Create Date: 2024-08-17 12:20:12.835552

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d109dc6c5755"
down_revision: Union[str, None] = "703075477888"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Remove duplicate entries
    op.execute(
        """
        DELETE FROM content_sources
        WHERE id IN (
            SELECT id FROM (
                SELECT id,
                       ROW_NUMBER() OVER (PARTITION BY value ORDER BY id) as row_num
                FROM content_sources
            ) t
            WHERE t.row_num > 1
        )
    """
    )

    # Create unique constraint
    op.create_unique_constraint(None, "content_sources", ["value"])
    op.alter_column(
        "users",
        "user_type",
        existing_type=postgresql.ENUM("user", "bot", name="usertype"),
        nullable=True,
        existing_server_default=sa.text("'user'::usertype"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "user_type",
        existing_type=postgresql.ENUM("user", "bot", name="usertype"),
        nullable=False,
        existing_server_default=sa.text("'user'::usertype"),
    )
    op.drop_constraint(None, "content_sources", type_="unique")
    # ### end Alembic commands ###
