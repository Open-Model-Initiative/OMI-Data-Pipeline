"""'Add embedding engine type and change embedding to vector'

Revision ID: 1f34b3b4b87c
Revises: 0eb4fb67e01c
Create Date: 2024-08-08 11:27:09.915586

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import pgvector.sqlalchemy.vector

# revision identifiers, used by Alembic.
revision: str = '1f34b3b4b87c'
down_revision: Union[str, None] = '0eb4fb67e01c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('annotation_embeddings', 'embedding')
    op.add_column('annotation_embeddings', sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=384), nullable=True))
    op.drop_column('content_embeddings', 'embedding')
    op.add_column('content_embeddings', sa.Column('embedding', pgvector.sqlalchemy.vector.VECTOR(dim=512), nullable=True))
    
    op.execute("CREATE TYPE embeddingenginetype AS ENUM ('IMAGE', 'VIDEO', 'VOICE', 'MUSIC', 'TEXT')")
    op.add_column('embedding_engines', sa.Column('type', sa.Enum('IMAGE', 'VIDEO', 'VOICE', 'MUSIC', 'TEXT', name='embeddingenginetype'), nullable=True))
    op.add_column('embedding_engines', sa.Column('supported', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('embedding_engines', 'supported')
    op.drop_column('embedding_engines', 'type')
    op.drop_column('content_embeddings', 'embedding')
    op.drop_column('annotation_embeddings', 'embedding')

    op.execute("DROP TYPE embeddingenginetype")
    op.add_column('content_embeddings', sa.Column('embedding', postgresql.JSON(astext_type=sa.Text()), nullable=True))
    op.add_column('annotation_embeddings', sa.Column('embedding', postgresql.JSON(astext_type=sa.Text()), nullable=True))

    # ### end Alembic commands ###
