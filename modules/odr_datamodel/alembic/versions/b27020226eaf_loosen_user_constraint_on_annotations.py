# SPDX-License-Identifier: Apache-2.0
"""'Loosen user constraint on annotations'

Revision ID: b27020226eaf
Revises: 680d29fa9b6c
Create Date: 2024-08-18 08:06:54.121671

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b27020226eaf"
down_revision: Union[str, None] = "680d29fa9b6c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "annotation_ratings", "rated_by_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "annotation_reports", "annotation_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "annotation_reports",
        "reported_by_id",
        existing_type=sa.INTEGER(),
        nullable=True,
    )
    op.alter_column(
        "annotation_sources", "added_by_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "annotations", "from_user_id", existing_type=sa.INTEGER(), nullable=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "annotations", "from_user_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "annotation_sources", "added_by_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "annotation_reports",
        "reported_by_id",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.alter_column(
        "annotation_reports",
        "annotation_id",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.alter_column(
        "annotation_ratings", "rated_by_id", existing_type=sa.INTEGER(), nullable=False
    )
    # ### end Alembic commands ###
